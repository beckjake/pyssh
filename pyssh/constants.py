"""SSH protocol constants, plus a bunch of other
"""
from __future__ import print_function, division, absolute_import
from __future__ import unicode_literals

from builtins import range # pylint: disable=redefined-builtin

CLIENT_VERSION = 0.1

SSH_DEFAULT_PORT = 22

### SSH Message IDs.

# From RFC 4250-4254
# 1-19 Transport layer generic (4253)
RANGE_GENERIC = range(1, 20)
SSH_MSG_DISCONNECT = 1
SSH_MSG_IGNORE = 2
SSH_MSG_UNIMPLEMENTED = 3
SSH_MSG_DEBUG = 4
SSH_MSG_SERVICE_REQUEST = 5
SSH_MSG_SERVICE_ACCEPT = 6
# 20-29 Algorithm negotiation (4253)
RANGE_NEGOTIATION = range(20, 30)
SSH_MSG_KEXINIT = 20
SSH_MSG_NEWKEYS = 21
# 30-49 Key exchange method specific (4253)
RANGE_KEX_SPECIFIC = range(30, 50)
SSH_MSG_KEXDH_INIT = 30
SSH_MSG_KEXDH_REPLY = 31

# 50-59 User authentication generic (4252)
RANGE_USERAUTH_GENERIC = range(50, 60)
SSH_MSG_USERAUTH_REQUEST = 50
SSH_MSG_USERAUTH_FAILURE = 51
SSH_MSG_USERAUTH_SUCCESS = 52
SSH_MSG_USERAUTH_BANNER = 53
# 60-79 Userauth exchange method specific (4252)
RANGE_USERAUTH_SPECIFIC = range(60, 80)
SSH_MSG_USERAUTH_PK_OK = 60
SSH_MSG_USERAUTH_PASSWD_CHANGEREQ = 60
SSH_MSG_USERAUTH_INFO_REQUEST = 60
SSH_MSG_USERAUTH_INFO_RESPONSE = 61
# 80-89 Connection Protocol Generic (4254)
RANGE_CONNECTION_GENERIC = range(80, 90)
SSH_MSG_GLOBAL_REQUEST = 80
SSH_MSG_REQUEST_SUCCESS = 81
SSH_MSG_REQUEST_FAILURE = 82
#  90-127 Channel related messages (4254)
RANGE_CHANNEL = range(90, 128)
SSH_MSG_CHANNEL_OPEN = 90
SSH_MSG_CHANNEL_OPEN_CONFIRMATION = 91
SSH_MSG_CHANNEL_OPEN_FAILURE = 92
SSH_MSG_CHANNEL_WINDOW_ADJUST = 93
SSH_MSG_CHANNEL_DATA = 94
SSH_MSG_CHANNEL_EXTENDED_DATA = 95
SSH_MSG_CHANNEL_EOF = 96
SSH_MSG_CHANNEL_CLOSE = 97
SSH_MSG_CHANNEL_REQUEST = 98
SSH_MSG_CHANNEL_SUCCESS = 99
SSH_MSG_CHANNEL_FAILURE = 100

# (4250, 4.1.3)
RANGE_IETF_CONSENSUS = range(128, 192)
RANGE_PRIVATE = range(192, 256)

### End SSH Message IDs

# reason codes for SSH_MSG_CHANNEL_OPEN_FAILURE
SSH_OPEN_ADMINISTRATIVELY_PROHIBITED = 1
SSH_OPEN_CONNECT_FAILED = 2
SSH_OPEN_UNKNOWN_CHANNEL_TYPE = 3
SSH_OPEN_RESOURCE_SHORTAGE = 4

# auth methods
SSH_METHOD_PUBLICKEY = b'publickey'
SSH_METHOD_PASSWORD = b'password'
SSH_METHOD_HOSTBASED = b'hostbased'
SSH_METHOD_NONE = b'none'
SSH_METHOD_KEYBOARD_INTERACTIVE = b'keyboard-interactive'

# channel types
CHANNEL_TYPE_SESSION = b'session'
CHANNEL_TYPE_X11 = b'x11'
CHANNEL_TYPE_FORWARDED_TCPIP = b'forwarded-tcpip'
CHANNEL_TYPE_DIRECT_TCPIP = b'direct-tcpip'

# global requests
GLOBAL_REQUEST_TCPIP_FORWARD = b'tcpip-forward'
GLOBAL_REQUEST_TCPIP_FORWARD_REPLY = b'tcpip-forward-reply' # made up
GLOBAL_REQUEST_CANCEL_TCPIP_FORWARD = b'cancel-tcpip-forward'


# channel request types
CHANNEL_REQUEST_TYPE_PTY = b'pty-req'
CHANNEL_REQUEST_TYPE_X11 = b'x11-req'
CHANNEL_REQUEST_TYPE_ENV = b'env'
CHANNEL_REQUEST_TYPE_SHELL = b'shell'
CHANNEL_REQUEST_TYPE_EXEC = b'exec'
CHANNEL_REQUEST_TYPE_SUBSYSTEM = b'subsystem'
CHANNEL_REQUEST_TYPE_WINDOW_CHANGE = b'window-change'
CHANNEL_REQUEST_TYPE_XON_XOFF = b'xon-xoff'
CHANNEL_REQUEST_TYPE_SIGNAL = b'signal'
CHANNEL_REQUEST_TYPE_EXIT_STATUS = b'exit-status'
CHANNEL_REQUEST_TYPE_EXIT_SIGNAL = b'exit-signal'


# compression types
COMPRESSION_TYPE_NONE = b'none'
COMPRESSION_TYPE_ZLIB = b'zlib'

# I still can't believe there isn't bytes.format() in python 3, argh
SSH_IDENT_STRING = 'SSH-2.0-ussh{}'.format(CLIENT_VERSION).encode('ascii')


# pylint: disable=line-too-long
# parameters are defined in RFC 2409, section 6.2
KEX_DH_GROUP1_SHA1 = b'diffie-hellman-group1-sha1'
KEX_DH_GROUP1_P = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF
KEX_DH_GROUP1_G = 2

# parameters are defined in RFC 3526, section 3
KEX_DH_GROUP14_SHA1 = b'diffie-hellman-group14-sha1'
KEX_DH_GROUP14_P = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF
KEX_DH_GROUP14_G = 2
# pylint: enable=line-too-long


# encryption methods
ENC_SSH_DSS = b'ssh-dss'
ENC_SSH_RSA = b'ssh-rsa'

MAX_WINDOW_SIZE = (2 ** 32) - 1
# 2MB/64KB seems to be pretty common...
WINDOW_SIZE = 2 * (2 ** 20)
MAX_PACKET = 64 * (2 ** 10)


VALID_SIGNAL_NAMES = [
    b'ABRT', b'ALRM', b'FPE', b'HUP', b'ILL', b'INT', b'KILL',
    b'PIPE', b'QUIT', b'SEGV', b'TERM', b'USR1', b'USR2'
]


# Hash types
ALGORITHM_HMAC_MD5_ETM = b'hmac-md5-etm@openssh.com'
ALGORITHM_HMAC_SHA1_ETM = b'hmac-sha1-etm@openssh.com'
ALGORITHM_HMAC_SHA256_ETM = b'hmac-sha2-256-etm@openssh.com'
ALGORITHM_HMAC_SHA512_ETM = b'hmac-sha2-512-etm@openssh.com'
ALGORITHM_HMAC_SHA1_96_ETM = b'hmac-sha1-96-etm@openssh.com'
ALGORITHM_HMAC_MD5_96_ETM = b'hmac-md5-96-etm@openssh.com'
ALGORITHM_HMAC_MD5 = b'hmac-md5'
ALGORITHM_HMAC_SHA1 = b'hmac-sha1'
ALGORITHM_HMAC_SHA256 = b'hmac-sha2-256'
ALGORITHM_HMAC_SHA512 = b'hmac-sha2-512'
ALGORITHM_HMAC_SHA1_96 = b'hmac-sha1-96'
ALGORITHM_HMAC_MD5_96 = b'hmac-md5-96'
